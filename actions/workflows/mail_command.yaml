---
vars:
    commands_result: ""
chain:
    -
        name: "search_host"
        ref: "st2.kv.get_object"
        parameters:
            key: "config.nodes.{{ node }}"
        on-success: "parse_command"
        on-failure: "search_failed"
    -
        name: "parse_command"
        ref: "mail_command.split_text"
        parameters:
            text: "{{ command_text }}"
        publish:
            commands: "{{ parse_command.result }}"
        on-success: "loop_with_commands"
    -
        name: "loop_with_commands"
        ref: "mail_command.iteration"
        parameters:
            items: "{{commands}}"
        publish:
            commands: "{{ loop_with_commands.result[1] }}"
            cmnd: "{{ loop_with_commands.result[0] }}"
        on-success: "execute_command"
        on-failure: "exit_loop"
    -
        name: "execute_command"
        ref: "core.local"
        parameters:
            cmd: "echo {{ cmnd }}"
        publish:
            commands_result: "{{ commands_result }}result of '{{ cmnd }}':\n{{ execute_command.stdout }}\n'" 
        on-success: "loop_with_commands"
    -
        name: "exit_loop"
        ref: "core.sendmail"
        parameters:
            from: "stackstorm@fixpoint.co.jp"
            to: "{{ reply_to }}"
            subject: "result execution commands @ {{ node }}"
            body: "{{ commands_result }}"
    -
        name: "search_failed"
        ref: "core.sendmail"
        parameters:
            from: "stackstorm@fixpoint.co.jp"
            to: "{{ reply_to }}"
            subject: "failed to search host: {{ node }}"
            body: "{{ node }} is unregistered host"
default: "search_host"
